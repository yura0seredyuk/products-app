{"version":3,"sources":["Components/Details.jsx","Components/Products.jsx","Components/Modal.jsx","App.js","index.js"],"names":["nanoid","customAlphabet","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","useStyles","makeStyles","root","maxWidth","Details","subtitle","productName","productDescription","productWeight","productSize","productId","productImageUrl","classes","useState","description","setDescription","comments","setComments","ref","firebase","firestore","collection","reference","changeName","setChangeName","changeDescription","setChangeDescription","changeWeight","setChangeWeight","React","modalIsOpen","setIsOpen","closeModal","useEffect","onSnapshot","querySnapshot","items","forEach","item","push","data","Card","className","CardActionArea","CardMedia","component","alt","height","image","title","CardContent","Typography","gutterBottom","variant","color","width","Box","m","Button","onClick","map","comment","date","Date","seconds","toLocaleDateString","doc","id","delete","catch","err","console","error","deleteComment","noValidate","autoComplete","TextField","type","label","value","onChange","e","target","newComment","set","isOpen","onAfterOpen","style","onRequestClose","contentLabel","_subtitle","event","updatedProduct","name","weight","update","Products","products","deleteProduct","display","flexWrap","justifyContent","product","imageUrl","count","CardActions","size","theme","margin","spacing","ModalForm","setName","setCount","setWeight","setSize","setImageUrl","split","mr","newProduct","App","setProducts","fontSize","fontFamily","sorted","sort","prev","next","localeCompare","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.01f0e204.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from 'react-modal';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { Box } from '@material-ui/core';\nimport { customAlphabet } from 'nanoid';\nconst nanoid = customAlphabet('1234567890', 4);\nconst customStyles = {\n  content : {\n    top                   : '50%',\n    left                  : '50%',\n    right                 : 'auto',\n    bottom                : 'auto',\n    marginRight           : '-50%',\n    transform             : 'translate(-50%, -50%)'\n  }\n};\n\nModal.setAppElement('#root')\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n});\n\nexport const Details = ({\n  productName,\n  productDescription,\n  productWeight,\n  productSize,\n  productId,\n  productImageUrl\n}) => {\n  const classes = useStyles();\n  const [description, setDescription] = useState('');\n  const [comments, setComments] = useState('');\n  const ref = firebase.firestore().collection(`Products/${productId}/comments/`);\n  const reference = firebase.firestore().collection(\"Products\");\n  const [changeName, setChangeName] = useState(productName);\n  const [changeDescription, setChangeDescription] = useState(productDescription);\n  const [changeWeight, setChangeWeight] = useState(productWeight);\n\n  var subtitle;\n  const [modalIsOpen,setIsOpen] = React.useState(false);\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    subtitle.style.color = 'black';\n  }\n\n  function closeModal(){\n    setIsOpen(false);\n  }\n\n  function editProducts(updatedProduct) {\n    reference\n      .doc(updatedProduct.id)\n      .update(updatedProduct)\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  function getComments() {\n    ref.onSnapshot((querySnapshot) => {\n      const items = [];\n      querySnapshot.forEach((item) => {\n        items.push(item.data());\n      });\n      setComments(items);\n    });\n  }\n\n  useEffect(() => {\n    getComments();\n  }, [])\n\n  function addComment(newComment) {\n    ref\n      .doc(newComment.id)\n      .set(newComment)\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  function deleteComment(comment) {\n    ref\n      .doc(comment.id)\n      .delete()\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  const addCommentToDatabase = () => {\n    addComment({ description, id: nanoid(), productId, date: new Date() });\n  }\n\n  const editName = (event) => {\n    setChangeName(event.target.value);\n  }\n\n  const editDescription = (event) => {\n    setChangeDescription(event.target.value);\n  }\n\n  const editWeight = (event) => {\n    setChangeWeight(event.target.value);\n  }\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardActionArea>\n          <CardMedia\n            component=\"img\"\n            alt={productName}\n            height=\"100\"\n            image={productImageUrl}\n            title={productName}\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h4\" component=\"h2\">\n              {productName}\n            </Typography>\n            <Typography variant=\"h5\">\n              {productDescription}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              {`Weight: ${productWeight}g.`}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              {`Height: ${productSize && productSize.height}mm Width: ${productSize && productSize.width}mm`}\n            </Typography>\n\n            <Box m={2}>\n              <Button variant=\"contained\" onClick={openModal}>Edit details</Button>\n            </Box>\n\n            <Typography>Comments:</Typography>\n\n            {comments && comments.map(comment => (\n              <Box key={comment.id}>\n                <Typography>\n                  {comment.description\n                    ? `# ${comment.description}`\n                    : (<>No comments</>)}\n                </Typography>\n                <Typography>\n                  {comment.date && `Date: ${new Date(comment.date.seconds).toLocaleDateString()}`}\n                </Typography>\n                <Box m={2}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={() => deleteComment(comment)}\n                  >\n                    X\n                  </Button>\n                </Box>\n              </Box>\n            ))}\n            <form\n              className={classes.root}\n              noValidate autoComplete=\"off\"\n            >\n              <TextField\n                type=\"text\"\n                id=\"standard-basic\"\n                label=\"Comment\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              />\n              <Box m={2}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={addCommentToDatabase}\n                >\n                  Add Comment\n                </Button>\n              </Box>\n            </form>\n\n            <Modal\n              isOpen={modalIsOpen}\n              onAfterOpen={afterOpenModal}\n              onRequestClose={closeModal}\n              style={customStyles}\n              contentLabel=\"Example Modal\"\n            >\n\n              <h2 ref={_subtitle => (subtitle = _subtitle)}>Edit details</h2>\n              <form>\n                <Box>Name:</Box>\n                <TextField\n                  id=\"standard-basic\"\n                  value={changeName}\n                  onChange={editName}\n                />\n                <Box>Description:</Box>\n                <TextField\n                  id=\"standard-basic\"\n                  value={changeDescription}\n                  onChange={editDescription}\n                />\n                <Box>Weight:</Box>\n                <TextField\n                  id=\"standard-basic\"\n                  value={changeWeight}\n                  onChange={editWeight}\n                />\n                <Box>\n                  <Button\n                    onClick={() => editProducts({ name: changeName, description: changeDescription, weight: changeWeight, id: productId })}\n                  >\n                    Save\n                  </Button>\n                  <Button onClick={closeModal}>Close details</Button>\n                </Box>\n              </form>\n            </Modal>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n    </>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Box } from '@material-ui/core';\nimport { Details } from './Details';\n\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n});\n\nexport function Products({ products, deleteProduct }) {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"center\">\n      {products.map(product => (\n        <Box m={2} key={product.id}>\n          <Card className={classes.root}>\n            <CardActionArea>\n              <CardMedia\n                component=\"img\"\n                alt={product.name}\n                height=\"140\"\n                image={product.imageUrl}\n                title={product.name}\n              />\n              <CardContent>\n                <Typography gutterBottom variant=\"h4\" component=\"h2\">\n                  {product.name}\n                </Typography>\n                <Typography variant=\"body1\">\n                  {`Products left: ${product.count}`}\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n            <CardActions>\n              <Box m={2}>\n                <Button variant=\"contained\" color=\"primary\">\n                  Learn More\n                </Button>\n              </Box>\n\n              <Box m={2}>\n                <Button\n                  size=\"small\"\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={() => deleteProduct(product)}\n                >\n                  Delete product\n                </Button>\n              </Box>\n            </CardActions>\n          </Card>\n\n          <Details\n            productName={product.name}\n            productDescription={product.description}\n            productWeight={product.weight}\n            productSize={product.size}\n            productImageUrl={product.imageUrl}\n            productId={product.id}\n          />\n        </Box>\n      ))}\n      </Box>\n    </>\n  );\n}\n\nProducts.propTypes = {\n  deleteProduct: PropTypes.func.isRequired,\n  products: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      weight: PropTypes.string.isRequired,\n      size: PropTypes.object.isRequired,\n      imageUrl: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ).isRequired\n}\n","import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Modal from 'react-modal';\nimport firebase from 'firebase';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { customAlphabet } from 'nanoid';\nimport { Box } from '@material-ui/core';\n\nconst nanoid = customAlphabet('1234567890', 4);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\n\nconst customStyles = {\n  content : {\n    width                 : '600px',\n    top                   : '20%',\n    left                  : '50%',\n    right                 : 'auto',\n    bottom                : 'auto',\n    marginRight           : '-50%',\n    transform             : 'translate(-50%, -50%)'\n  }\n};\n\nModal.setAppElement('#root');\n\nexport function ModalForm() {\n  const [name, setName] = useState('');\n  const [count, setCount] = useState('');\n  const [weight, setWeight] = useState('');\n  const [size, setSize] = useState({});\n  const [imageUrl, setImageUrl] = useState('');\n  const [modalIsOpen,setIsOpen] = useState(false);\n  const [description, setDescription] = useState('');\n  const ref = firebase.firestore().collection('Products');\n  const classes = useStyles();\n\n  let subtitle;\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    subtitle.style.color = '#grey';\n  }\n\n  function closeModal(){\n    setIsOpen(false);\n  }\n\n  function addNewProducts(newProduct) {\n    ref\n      .doc(newProduct.id)\n      .set(newProduct)\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  const addSize = (event) => {\n    const value = event.target.value.split('x');\n\n    setSize({height: value[0], width:value[1]});\n  }\n\n  const addProductToDatabase = () => {\n    addNewProducts({ id: nanoid(), name, count, imageUrl, weight, size, description, comments: [] });\n    setIsOpen(false);\n  }\n\n  return (\n    <>\n      <Box m={2}>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={openModal}\n        >\n          Add new Product\n        </Button>\n      </Box>\n\n      <Modal\n        isOpen={modalIsOpen}\n        onAfterOpen={afterOpenModal}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Example Modal\"\n      >\n        <h2 ref={_subtitle => (subtitle = _subtitle)}>ADD NEW PRODUCT</h2>\n        <form\n          className={classes.root}\n          noValidate autoComplete=\"off\"\n        >\n          <TextField\n            type=\"text\"\n            id=\"standard-basic\"\n            label=\"Name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n\n          <TextField\n            type=\"number\"\n            id=\"standard-basic\"\n            label=\"Count\"\n            value={count}\n            onChange={(e) => setCount(e.target.value)}\n          />\n\n          <TextField\n            type=\"text\"\n            id=\"standard-basic\"\n            label=\"ImageUrl\"\n            value={imageUrl}\n            onChange={(e) => setImageUrl(e.target.value)}\n          />\n\n          <TextField\n            type=\"text\"\n            id=\"standard-basic\"\n            label=\"Weight\"\n            value={weight}\n            onChange={(e) => setWeight(e.target.value)}\n          />\n\n          <TextField\n            type=\"text\"\n            id=\"standard-basic\"\n            label=\"Size\"\n            onChange={addSize}\n          />\n\n          <TextField\n            type=\"text\"\n            id=\"standard-basic\"\n            label=\"Description\"\n            onChange={(e) => setDescription((e.target.value))}\n          />\n\n          <Box m={2} display=\"flex\">\n            <Box mr={2}>\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={closeModal}\n              >\n                Cancel\n              </Button>\n            </Box>\n            <Box>\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={addProductToDatabase}\n              >\n                Submit\n              </Button>\n            </Box>\n          </Box>\n        </form>\n      </Modal>\n    </>\n  )\n}\n","import React, {useState, useEffect} from \"react\";\nimport './App.css';\nimport firebase from 'firebase/app';\nimport { Products } from './Components/Products';\nimport { ModalForm } from './Components/Modal';\nimport Button from '@material-ui/core/Button';\nimport { Box } from '@material-ui/core';\nimport 'firebase/firestore';\n\nfunction App() {\n  const [products, setProducts] = useState([]);\n  const ref = firebase.firestore().collection('Products');\n\n  function getProducts() {\n    ref.onSnapshot((querySnapshot) => {\n      const items = [];\n      querySnapshot.forEach((item) => {\n        items.push(item.data());\n      });\n      setProducts(items);\n    });\n  }\n\n  useEffect(() => {\n    getProducts();\n  }, [])\n\n  function deleteProduct(product) {\n    ref\n      .doc(product.id)\n      .delete()\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  const sortByName = () => {\n    const sorted = [...products].sort((prev, next) => {\n      return prev.name.localeCompare(next.name);\n    });\n    setProducts(sorted);\n  };\n\n  const sortByCount = () => {\n    const sorted = [...products].sort((prev, next) => {\n      return prev.count - next.count;\n    });\n    setProducts(sorted);\n  };\n\n  return (\n    <>\n        <div className=\"App\">\n          <Box\n            m={2}\n            fontSize={40}\n            fontFamily=\"Roboto\"\n          >\n            Product list\n          </Box>\n\n          <Box m={2} display=\"flex\">\n            <Box mr={2}>\n              <Button\n                variant=\"contained\"\n                onClick={sortByName}\n              >\n                Sort by name\n              </Button>\n            </Box>\n            <Box>\n              <Button\n                variant=\"contained\"\n                onClick={sortByCount}\n              >\n                Sort by count\n              </Button>\n            </Box>\n          </Box>\n\n          <ModalForm />\n\n          <Products\n            products={products}\n            deleteProduct={deleteProduct}\n          />\n        </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore'\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBSZDPFopZP_72U7aGNOjbxQQB4f618zbQ\",\n  authDomain: \"products-app-5d772.firebaseapp.com\",\n  projectId: \"products-app-5d772\",\n  storageBucket: \"products-app-5d772.appspot.com\",\n  messagingSenderId: \"635234318516\",\n  appId: \"1:635234318516:web:0d9169d9726648894b7fe1\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}